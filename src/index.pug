doctype html

mixin icon(name)
  svg(class="icon")
    use(xlink:href=`./icons.svg#${name}`)

html(lang="en")
  head
    meta(charset='UTF-8')
    meta(name='viewport' content='width=device-width, initial-scale=1.0')
    meta(http-equiv='X-UA-Compatible' content='ie=edge')
    meta(http-equiv='Content-Security-Policy' content="script-src 'unsafe-inline'")

    link(rel='stylesheet' href='./renderer/styles/albums.css')
    link(rel='stylesheet' href='./renderer/styles/body.css')
    link(rel='stylesheet' href='./renderer/styles/controlBar.css')
    link(rel='stylesheet' href='./renderer/styles/controls.css')
    link(rel='stylesheet' href='./renderer/styles/fonts.css')
    link(rel='stylesheet' href='./renderer/styles/menu.css')
    link(rel='stylesheet' href='./renderer/styles/tippy.css')

  body(class='noMotion')
    img(src='../test-materials/2nd page.png').design

    .menu
      .menuItem.wrapper.expanded.selected
        .menuItem.container
          +icon('playing')
      .menuItem.wrapper.expanded.selected
        .menuItem.container
          +icon('albums')
      .menuItem.wrapper.expanded.selected
        .menuItem.container
          +icon('podcast')
      .menuItem.wrapper.expanded.selected
        .menuItem.container
          +icon('settings')
        
    .page.wrapper
      .page.container
        .pageItem.albums.wrapper
          .pageItem.albums.container
            .pageItem.albums.cover(style='background-image: url(../test-materials/Dina2.png);')
            .pageItem.albums.card
              .pageItem.albums.title Slumber
              .pageItem.albums.text by 
              .pageItem.albums.artist Dina El-Wedidi
        //- .pageItem.albums.wrapper.placeholder
        //-   .pageItem.albums.container
        //-     .pageItem.albums.cover
        //-     .pageItem.albums.card
        //-       .pageItem.albums.title
        //-       .pageItem.albums.text
        //-       .pageItem.albums.artist
        //- //- .pageItem.albums.wrapper
        //-   .pageItem.albums.container
        //-     .pageItem.albums.cover(style='background-image: url(../test-materials/Maryam1.jpg);')
        //-     .pageItem.albums.card
        //-       .pageItem.albums.title Ana Mesh Baghanny
        //-       .pageItem.albums.text by 
        //-       .pageItem.albums.artist Maryam Saleh
        //- .pageItem.albums.wrapper
        //-   .pageItem.albums.container
        //-     .pageItem.albums.cover(style='background-image: url(../test-materials/Ramy1.png);')
        //-     .pageItem.albums.card
        //-       .pageItem.albums.title Mamnoua
        //-       .pageItem.albums.text by 
        //-       .pageItem.albums.artist Ramy Essam
        //- .pageItem.albums.wrapper
        //-   .pageItem.albums.container
        //-     .pageItem.albums.cover(style='background-image: url(../test-materials/Dina1.jpeg);')
        //-     .pageItem.albums.card
        //-       .pageItem.albums.title Turning Back
        //-       .pageItem.albums.text by 
        //-       .pageItem.albums.artist Dina El-Wedidi
    
    .controlBar
      .controls.container
        .seekBar.played
        .seekBar.remaining
        .playButton.playing
          .pause(data-tippy="Pause")
            +icon('pause')
          .play(data-tippy="Play")
            +icon('play')
        .previousButton(data-tippy="Previous Track")
          +icon('next')
        .nextButton(data-tippy="Next Track")
          +icon('next')
        .rewindButton(data-tippy="Rewind 10s")
          +icon('forward')
          .rewindTime 10
        .forwardButton(data-tippy="Forward 30s")
          +icon('forward')
          .forwardTime 30
        .shuffleButton(data-tippy="Shuffle")
          +icon('shuffle')
        .repeatButton.looping
          .loop(data-tippy="Looping the queue")
            +icon('loop')
          .repeat(data-tippy="Repeating the track")
            +icon('repeat')
        .volumeButton
          +icon('volume')
      .queue.container
  
  script.
    window.onerror = function(message, url, line, column, error)
    {
      require('electron').ipcRenderer.send('rendererError', error.stack || error);
    };
    require('./renderer/renderer.js');